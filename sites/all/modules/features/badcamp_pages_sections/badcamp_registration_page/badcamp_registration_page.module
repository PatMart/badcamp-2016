<?php
/**
 * @file
 * Code for the BADCamp Registration page feature.
 */

include_once 'badcamp_registration_page.features.inc';

/**
 * Implements hook_form_ID_alter().
 */
function badcamp_registration_page_form_user_login_alter(&$form, &$form_state) {
  $form['notice']['#type'] = 'item';
  $form['notice']['#title'] = t('Heads up!');
  $form['notice']['#markup'] = t("Registration is not saved from year-to-year; even if you've attended before, you'll still need to register.");
  $form['notice']['#weight'] = -1;
}

/**
 * Implements hook_form_ID_alter().
 */
function badcamp_registration_page_form_user_pass_alter(&$form, &$form_state) {
  $form['notice']['#type'] = 'item';
  $form['notice']['#title'] = t('Need help logging in?');
  $form['notice']['#markup'] = t("Registration is not saved from year-to-year; if you haven't registered this year, you will need to register again.");
  $form['notice']['#weight'] = -1;
}

/**
 * Implements hook_form_ID_alter().
 */
function badcamp_registration_page_form_user_register_form_alter(&$form, &$form_state, $form_id) {
  $form['#pre_render'][] = '_badcamp_registration_page_form_pre_render_element';
  $form['field_user_mailchimp'] = '';
  $form['actions']['submit']['#value'] = t('Next');
}

/**
 * Implements hook_form_ID_alter().
 */
function badcamp_registration_page_form_user_profile_form_alter(&$form, &$form_state, $form_id) {
  $form['#pre_render'][] = '_badcamp_registration_page_form_pre_render_element';
  $form['actions']['submit']['#value'] = t('Skip/Finish');
  $form['field_first_name_last_name']['#access'] = FALSE;
  $form['field_user_drupalorg_username']['#access'] = FALSE;
  $form['account']['mail']['#access'] = FALSE;
  $form['account']['pass']['#access'] = FALSE;
  $form['field_user_interest_volunteering']['#access'] = FALSE;
  $form['field_user_training_interest']['#access'] = FALSE;
  $form['field_user_interest_jobs']['#access'] = FALSE;
  $form['field_user_flickr_profile']['#access'] = FALSE;
  $form['field_user_hosting']['#access'] = FALSE;
  $form['field_user_services']['#access'] = FALSE;
  $form['field_user_mailchimp']['#access'] = FALSE;
  $form['field_user_interests'][LANGUAGE_NONE]['#title_display'] = 'invisible';
  $form['field_user_interests'][LANGUAGE_NONE]['#attributes']['placeholder'] = $form['field_user_interests'][LANGUAGE_NONE]['#title'];

  $placeholder_textfields = array(
    'field_user_first_name',
    'field_user_last_name',
    'field_user_title_role',
    'field_user_bio',
    'field_do_profile',
    'field_user_twitter_handle',
    'field_user_organization',
    'field_do_profile',
    'field_user_facebook_profile',
    'field_user_linkedin',
  );

  foreach ($placeholder_textfields as $field_name) {
    $form[$field_name][LANGUAGE_NONE][0]['value']['#attributes']['placeholder'] = $form[$field_name][LANGUAGE_NONE][0]['value']['#title'];
    $form[$field_name][LANGUAGE_NONE][0]['value']['#title_display'] = 'invisible';
  }
}

/**
 * Preprocess user registration elements to convert titles to placeholders.
 */
function _badcamp_registration_page_form_pre_render_element($element) {

  if ($children = element_children($element)) {
    foreach ($children as $child) {
      $element[$child] = _badcamp_registration_page_form_pre_render_element($element[$child]);
    }
    return $element;
  }
  $placeholder_types = array(
    'textfield',
    'textarea',
    'emailfield',
    'password',
  );
  if (isset($element['#type']) && in_array($element['#type'], $placeholder_types)) {
    $element['#title'] = $element['#required'] ? $element['#title'] . '*' : $element['#title'];
    $element['#attributes']['placeholder'] = $element['#title'];
    $element['#title_display'] = 'invisible';
    $element['#description'] = NULL;
  }

  return $element;
}

/**
 * Implements hook_menu_alter().
 */
function badcamp_registration_page_menu_alter(&$items) {
  // Rename create new account.
  $items['user/register']['title'] = 'Register for BADCamp';
  $items['user/register']['weight'] = 0;
  // Rename password request.
  $items['user/password']['title'] = 'I forgot my password';
  $items['user/password']['weight'] = 3;
}

/**
 * Implements hook_admin_paths_alter().
 *
 * Use the front end theme for the user edit page.
 */
function badcamp_registration_page_admin_paths_alter(array &$paths) {
  $kill_paths = array(
    'user/*/edit' => '',
    'user/*/edit/*' => '',
  );
  $paths = array_diff_key($paths, $kill_paths);
}

/**
 * Implements hook_ctools_plugin_directory().
 */
function badcamp_registration_page_ctools_plugin_directory($module, $api) {
  if ($module === 'ctools') {
    return "plugins/$api";
  }
}
