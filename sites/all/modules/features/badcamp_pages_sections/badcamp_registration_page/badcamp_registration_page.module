<?php
/**
 * @file
 * Code for the BADCamp Registration page feature.
 */

include_once 'badcamp_registration_page.features.inc';

/**
 * Implements hook_form_ID_alter().
 */
function badcamp_registration_page_form_user_login_alter(&$form, &$form_state) {
  $form['notice']['#type'] = 'item';
  $form['notice']['#title'] = t('Heads up!');
  $form['notice']['#markup'] = t("Registration is not saved from year-to-year; even if you've attended before, you'll still need to register.");
  $form['notice']['#weight'] = -1;
}

/**
 * Implements hook_form_ID_alter().
 */
function badcamp_registration_page_form_user_pass_alter(&$form, &$form_state) {
  $form['notice']['#type'] = 'item';
  $form['notice']['#title'] = t('Need help logging in?');
  $form['notice']['#markup'] = t("Registration is not saved from year-to-year; if you haven't registered this year, you will need to register again.");
  $form['notice']['#weight'] = -1;
}

/**
 * Implements hook_form_ID_alter().
 */
function badcamp_registration_page_form_alter(&$form, &$form_state, $form_id) {
  if (in_array($form_id, array(
    'user_profile_form',
    'user_register_form',
  ))) {
    $form['account']['name']['#pre_render'][] = '_badcamp_registration_page_form_pre_render_element';
    $form['account']['pass']['#pre_render'][] = '_badcamp_registration_page_form_pre_render_element';
    $form['account']['conf_mail']['#pre_render'][] = '_badcamp_registration_page_form_pre_render_element';
    $form['field_user_interests']['#pre_render'][] = '_badcamp_registration_page_form_pre_render_element';
    $form['field_user_bio']['#pre_render'][] = '_badcamp_registration_page_form_pre_render_element';
    $form['field_user_organization']['#pre_render'][] = '_badcamp_registration_page_form_pre_render_element';
    $form['field_user_twitter_handle']['#pre_render'][] = '_badcamp_registration_page_form_pre_render_element';
    $form['field_user_facebook_profile']['#pre_render'][] = '_badcamp_registration_page_form_pre_render_element';
    $form['field_user_flickr_profile']['#pre_render'][] = '_badcamp_registration_page_form_pre_render_element';
    $form['field_user_title_role']['#pre_render'][] = '_badcamp_registration_page_form_pre_render_element';
  }
}

/**
 * Implements hook_form_ID_alter().
 */
function badcamp_registration_page_form_user_register_form_alter(&$form, &$form_state, $form_id) {
  $form['field_user_first_name']['#pre_render'][] = '_badcamp_registration_page_form_pre_render_element';
  $form['field_user_last_name']['#pre_render'][] = '_badcamp_registration_page_form_pre_render_element';
  $form['account']['mail']['#pre_render'][] = '_badcamp_registration_page_form_pre_render_element';
  $form['field_user_drupalorg_username']['#pre_render'][] = '_badcamp_registration_page_form_pre_render_element';
  $form['actions']['submit']['#value'] = t('Next');
}

/**
 * Implements hook_form_ID_alter().
 */
function badcamp_registration_page_form_user_profile_form_alter(&$form, &$form_state, $form_id) {
  $form['field_first_name_last_name']['#pre_render'][] = '_badcamp_registration_page_form_pre_render_element';
  $form['field_do_profile']['#pre_render'][] = '_badcamp_registration_page_form_pre_render_element';
  $form['actions']['submit']['#value'] = t('Skip/Finish');
  $form['field_user_drupalorg_username'] = NULL;
  $form['account']['mail'] = NULL;
  $form['account']['pass'] = NULL;
  $form['field_user_interest_volunteering'] = NULL;
  $form['field_user_training_interest'] = NULL;
  $form['field_user_interest_jobs'] = NULL;
  $form['field_user_hosting'] = NULL;
  $form['field_user_services'] = NULL;
  $form['field_user_mailchimp'] = NULL;
  $form['field_user_first_name'] = NULL;
  $form['field_user_last_name'] = NULL;
}

/**
 * Preprocess user registration elements to convert titles to placeholders.
 */
function _badcamp_registration_page_form_pre_render_element($element) {
  if ($children = element_children($element)) {
    foreach ($children as $child) {
      $element[$child] = _badcamp_registration_page_form_pre_render_element($element[$child]);
    }
    return $element;
  }
  if (isset($element['#title'])) {
    $element['#title'] = $element['#required'] ? $element['#title'] . '*' : $element['#title'];
    $element['#attributes']['placeholder'] = $element['#title'];
    $element['#title_display'] = 'invisible';
    $element['#description'] = NULL;
    return $element;
  }
}

/**
 * Implements hook_menu_alter().
 */
function badcamp_registration_page_menu_alter(&$items) {
  // Rename create new account.
  $items['user/register']['title'] = 'Register for BADCamp';
  $items['user/register']['weight'] = 0;
  // Rename password request.
  $items['user/password']['title'] = 'I forgot my password';
  $items['user/password']['weight'] = 3;
}

/**
 * Implements hook_admin_paths_alter().
 *
 * Use the front end theme for the user edit page.
 */
function badcamp_registration_page_admin_paths_alter(array &$paths) {
  $kill_paths = array(
    'user/*/edit' => '',
    'user/*/edit/*' => '',
  );
  $paths = array_diff_key($paths, $kill_paths);
}

/**
 * Implements hook_ctools_plugin_directory().
 */
function badcamp_registration_page_ctools_plugin_directory($module, $api) {
  if ($module === 'ctools') {
    return "plugins/$api";
  }
}
