<?php
/**
 * @file
 * Code for the BADCamp Registration page feature.
 */

include_once 'badcamp_registration_page.features.inc';

/**
 * Implements hook_form_ID_alter().
 */
function badcamp_registration_page_form_user_login_alter(&$form, &$form_state) {
  $form['notice']['#type'] = 'item';
  $form['notice']['#title'] = t('Heads up!');
  $form['notice']['#markup'] = t("Registration is not saved from year-to-year; even if you've attended before, you'll still need to register.");
  $form['notice']['#weight'] = -1;
}

/**
 * Implements hook_form_ID_alter().
 */
function badcamp_registration_page_form_user_pass_alter(&$form, &$form_state) {
  $form['notice']['#type'] = 'item';
  $form['notice']['#title'] = t('Need help logging in?');
  $form['notice']['#markup'] = t("Registration is not saved from year-to-year; if you haven't registered this year, you will need to register again.");
  $form['notice']['#weight'] = -1;
}

/**
 * Implements hook_form_ID_alter().
 */
function badcamp_registration_page_form_user_register_form_alter(&$form, &$form_state, $form_id) {
  $form['#pre_render'][] = '_badcamp_registration_page_form_pre_render_element';
  $form['field_user_mailchimp'][LANGUAGE_NONE][0]['#title'] = '';
  $form['field_user_mailchimp'][LANGUAGE_NONE][0]['subscribe']['#title'] = t('Subscribe to newsletter');
  $form['actions']['submit']['#value'] = t('Next');
}

/**
 * Implements hook_form_ID_alter().
 *
 * The user profile form shows up in two places - once on registration/profile,
 * where it is a minimal version (step 3 of registration), and once on
 * user/%uid/edit.
 */
function badcamp_registration_page_form_user_profile_form_alter(&$form, &$form_state, $form_id) {
  // Add a pre_render callback to handle converting labels
  // to placeholders.
  foreach (element_children($form) as $child) {
    $form[$child]['#pre_render'][] = '_badcamp_registration_page_form_pre_render_element';
  }

  // This is the least hacky way I could find to do
  // detection on when this form is being loaded for
  // the registration workflow...
  $menu_item = menu_get_item();
  if ($menu_item['page_callback'] === 'page_manager_page_execute' && $menu_item['page_arguments'][0] === 'profile_edit_page') {
    $form['actions']['submit']['#value'] = t('Skip/Finish');
    $form['account']['#access'] = FALSE;
    $form['#submit'][] = 'badcamp_registration_page_redirect_to_profile_submit_handler';
  }
}

/**
 * User profile form submit callback function.
 */
function badcamp_registration_page_redirect_to_profile_submit_handler($form, &$form_state) {
  $form_state['redirect']  = 'user/' . $form['#user']->uid;
}

/**
 * Preprocess user registration elements to convert titles to placeholders.
 */
function _badcamp_registration_page_form_pre_render_element($element) {

  if ($children = element_children($element)) {
    foreach ($children as $child) {
      $element[$child] = _badcamp_registration_page_form_pre_render_element($element[$child]);
    }
  }
  $placeholder_types = array(
    'textfield',
    'textarea',
    'emailfield',
    'password',
  );
  if (isset($element['#type']) && in_array($element['#type'], $placeholder_types)) {
    $element['#attributes']['placeholder'] = $element['#title'];
    $element['#description'] = NULL;
  }

  return $element;
}

/**
 * Implements hook_form_alter().
 */
function badcamp_registration_page_form_alter(&$form, &$form_state, $form_id) {
  // Checking because /registration/sponsorship has no "actions".
  if (!array_key_exists('actions', $form)) {
    return;
  }

  if (array_key_exists('submit', $form['actions'])) {
    $form['actions']['submit']['#prefix'] = '<div class="form-submit-wrapper button">';
    $form['actions']['submit']['#suffix'] = '</div>';
  }

  // For /node/add/session.
  if (array_key_exists('preview', $form['actions'])) {
    $form['actions']['preview']['#prefix'] = '<div class="form-submit-wrapper button">';
    $form['actions']['preview']['#suffix'] = '</div>';
  }
}

/**
 * Implements hook_menu_alter().
 */
function badcamp_registration_page_menu_alter(&$items) {
  // Rename create new account.
  $items['user/register']['title'] = 'Register for BADCamp';
  $items['user/register']['weight'] = 0;
  // Rename password request.
  $items['user/password']['title'] = 'I forgot my password';
  $items['user/password']['weight'] = 3;
}

/**
 * Implements hook_admin_paths_alter().
 *
 * Use the front end theme for the user edit page.
 */
function badcamp_registration_page_admin_paths_alter(array &$paths) {
  $kill_paths = array(
    'user/*/edit' => '',
    'user/*/edit/*' => '',
  );
  $paths = array_diff_key($paths, $kill_paths);
}

/**
 * Implements hook_ctools_plugin_directory().
 */
function badcamp_registration_page_ctools_plugin_directory($module, $api) {
  if ($module === 'ctools') {
    return "plugins/$api";
  }
}
